#include <AFMotor.h>
#include <NewPing.h>  //Ultrasonic sensor Library

AF_DCMotor motor1(1, MOTOR12_1KHZ); 
AF_DCMotor motor2(2, MOTOR12_1KHZ);
AF_DCMotor motor3(3, MOTOR34_1KHZ);
AF_DCMotor motor4(4, MOTOR34_1KHZ);

int distance ;

#define TRIG_PIN A5
#define ECHO_PIN A4

#define left A1
#define right A2
#define front A3

#define MAX_DISTANCE 200

NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE); 

void setup() {
  //declaring pin types
  pinMode(left,INPUT);
  pinMode(right,INPUT);
  pinMode(front,INPUT);
  Serial.begin(9600);
}

void loop() {
 distance = readPing();
   if(distance <= 15)
 {
    Stop();
    delay(100);
    Right(255);
    delay(400);
    Forward(150);
    delay(700);
    Left(255);
    delay(500);
    while(digitalRead(front)==LOW){
      Forward(150);}
   }
  
  else { line:
    if(digitalRead(left)==HIGH && digitalRead(right)==HIGH) //IR will not glow on black line
    {
      //going forward in case of line intersection
      Forward(170);
      
      }
    
    if(digitalRead(left)==LOW && digitalRead(right)==LOW)  //IR not on black line
    {Forward(100);
      //Move both the Motors
    }
    if(digitalRead(left)==LOW && digitalRead(right)==HIGH )
    {
      // while(digitalRead(front)==LOW){
        Right(255);
        if (digitalRead(left)==HIGH ){
          Forward(150);
          goto line;
        }
    delay (100);}
    //}

    if(digitalRead(left)==HIGH && digitalRead(right)==LOW )
    {
       //while(digitalRead(front)==LOW){
        Left(255);
        if (digitalRead(left)==HIGH ){
          Forward(150);
          goto line;
        }
    delay (100);
        
        }
   // }
      
}}
  

//}
/*  Serial.println(digitalRead(left));
  Serial.println(digitalRead(right));
  Serial.println(digitalRead(front));
  

  if(!digitalRead(left)==0 && analogRead(right)==0 ){
    Left();}
  
  else if(digitalRead(left)==0 && !digitalRead(right)==0 ){
   Right();}
else{  
  if(!digitalRead(front)==0){
  Forward();}
  
  else if(digitalRead(front)==0) {
  delay (1000);
  Stop();}
}}
}*/
void Stop(){
    motor1.run(RELEASE);
    motor1.setSpeed(0);
    motor2.run(RELEASE);
    motor2.setSpeed(0);
    motor3.run(RELEASE);
    motor3.setSpeed(0);
    motor4.run(RELEASE);
    motor4.setSpeed(0);
}
    
int readPing() { 
  delay(50);
  int cm = sonar.ping_cm();
  if(cm==0)
  {
    cm = 100;
  }
  return cm;
}

void Forward(int s){
    motor1.run(FORWARD);
    motor1.setSpeed(s);
    motor2.run(FORWARD);
    motor2.setSpeed(s);
    motor3.run(FORWARD);
    motor3.setSpeed(s);
    motor4.run(FORWARD);
    motor4.setSpeed(s); 
}

 void Left(int s){   
    motor1.run(BACKWARD);
    motor1.setSpeed(s);
    motor2.run(BACKWARD);
    motor2.setSpeed(s);
    motor3.run(FORWARD);
    motor3.setSpeed(s);
    motor4.run(FORWARD);
    motor4.setSpeed(s);
 }   
 
 void Right(int s){
    motor1.run(FORWARD);
    motor1.setSpeed(s);
    motor2.run(FORWARD);
    motor2.setSpeed(s);
    motor3.run(BACKWARD);
    motor3.setSpeed(s);
    motor4.run(BACKWARD);
    motor4.setSpeed(s);
    
 }
/* void Backward(){ 
    motor1.run(BACKWARD);
    motor1.setSpeed(120);
    motor2.run(BACKWARD);
    motor2.setSpeed(120);
    motor3.run(BACKWARD);
    motor3.setSpeed(120);
    motor4.run(BACKWARD);
    motor4.setSpeed(120);
 } */
